name: Build and Test KeyStore

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore KeyStore.sln

      - name: Build solution
        run: dotnet build KeyStore.sln --configuration Release --no-restore

      - name: Publish test project
        run: dotnet publish Tests/Tests.csproj --configuration Release --output ./published-tests

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: ./published-tests

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-artifacts
          path: ./tests

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Run tests
        run: dotnet test ./tests/Tests.dll --logger trx

  deploy:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_SERVER_IP }} << 'EOF'
            # Команды для деплоя на сервере
            cp -r /srv/KeyStore
            docker compost up -d
          EOF

name: Build, Test and Deploy KeyStore

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: keystore-backend
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
  DB_NAME: ${{ secrets.DB_NAME }}

jobs:
#  test:
#    needs: build
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Download build artifacts
#        uses: actions/download-artifact@v4
#        with:
#          name: test-artifacts
#          path: ./tests
#
#      - name: Set up .NET
#        uses: actions/setup-dotnet@v3
#        with:
#          dotnet-version: '9.0.x'
#
#      - name: Run tests
#        run: dotnet vstest ./tests/Tests.dll --logger:trx

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          context: .
          file: KeyStore/Dockerfile

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /srv/Keystore
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
            docker-compose -f /srv/KeyStore/docker-compose.yml up -d